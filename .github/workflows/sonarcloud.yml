name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and Publish Docker Image
    runs-on: ubuntu-latest

    steps:
      # Step 1: Download repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2:
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: adopt

      # Step 3:
      - name: Build and run tests with Gradle
        run: ./gradlew build --stacktrace --info

      # Step 4:
      - name: Run SonarQube analysis
        run: ./gradlew sonarqube
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # Step 5:
      - name: Build Docker image
        run: docker build -t small-square-microservice-v3 .

      # Step 6:
      - name: Tag Docker image
        run: docker tag small-square-microservice-v3 ${{ secrets.DOCKERHUB_USERNAME }}/small-square-microservice-v3:latest

      # Step 7:
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 8:
      - name: Push Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/small-square-microservice-v3:latest

      # Step 9:
      - name: Google Chat Notification
        uses: Co-qn/google-chat-notification@releases/v1
        with:
          name: Build-And-Publish-Docker-Image
          url: ${{ secrets.GOOGLE_CHAT_WEBHOOK }}
          status: ${{ job.status }}
        if: always() && failure()

  deploy:
    name: Deploy to Elastic Beanstalk
    needs: build
    runs-on: ubuntu-latest

    steps:
      # Step 1:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Configure AWS Credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.IAM_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.IAM_SECRET_KEY }}
          aws-region: us-east-1

      # Step 3:
      - name: Pull Docker image
        run: docker pull ${{ secrets.DOCKERHUB_USERNAME }}/small-square-microservice-v3:latest

      # Step 4:
      - name: Deploy to EBS
        run: |
          aws elasticbeanstalk create-application-version --application-name Small-Square-Docker-v2 \
          --version-label ${{ github.sha }} \
          --source-bundle S3Bucket=elasticbeanstalk-us-east-1-561506039848,S3Key=1688497147692-Dockerrun.aws.json \
          --region us-east-1
          aws elasticbeanstalk update-environment  \
          --environment-name Small-Square-Docker-v2-env \
          --version-label ${{ github.sha }} \
          --region us-east-1

      # Step 5:
      - name: Google Chat Notification
        uses: Co-qn/google-chat-notification@releases/v1
        with:
          name: Deploy-Docker-Image
          url: ${{ secrets.GOOGLE_CHAT_WEBHOOK }}
          status: ${{ job.status }}
        if: always() && failure()

#      - name: Google Chat Notification v2.0
#        #        if: always() && jobs.build.outcome != 'success'
#        if: always() && failure()
#        uses: teknatha136/actions-google-chat-text-message@main
#        with:
#          google-chat-webhook: ${{ secrets.GOOGLE_CHAT_WEBHOOK }}
#          text-message: Ocurri√≥ un error al construir